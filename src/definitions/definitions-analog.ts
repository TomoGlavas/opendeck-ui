import { IBlockDefinition, FormInputComponent, DefinitionType } from ".";

export const defaultAnalogData: Dictionary<number> = {
  enabled: (null as unknown) as number,
  invertDirection: (null as unknown) as number,
  midiType: (null as unknown) as number,
  midiIdLSB: (null as unknown) as number,
  midiIdMSB: (null as unknown) as number,
  lowerCCLimitLSB: (null as unknown) as number,
  lowerCCLimitMSB: (null as unknown) as number,
  upperCCLimitLSB: (null as unknown) as number,
  upperCCLimitMSB: (null as unknown) as number,
  midiChannel: (null as unknown) as number,
};

export const AnalogSectionDefinitions: Dictionary<IBlockDefinition> = {
  Enabled: {
    key: "enabled",
    type: DefinitionType.ComponentValue,
    section: 0,
    component: FormInputComponent.Toggle,
    label: "Enabled",
    helpText: ``,
  },
  InvertDirection: {
    key: "invertDirection",
    type: DefinitionType.ComponentValue,
    section: 1,
    component: FormInputComponent.Toggle,
    label: "Invert direction",
    helpText: ``,
  },
  MidiType: {
    key: "midiType",
    type: DefinitionType.ComponentValue,
    section: 2,
    component: FormInputComponent.Select,
    options: [
      { value: 0, text: "Potentiometer with CC message, 7-bit" },
      { value: 1, text: "Potentiometer with note message" },
      { value: 2, text: "FSR" },
      { value: 3, text: "Button" },
      { value: 4, text: "NRPN, 7-bit" },
      { value: 5, text: "NRPN, 14-bit" },
      { value: 6, text: "Pitch bend" },
      { value: 7, text: "Potentiometer with CC message, 14-bit" },
    ],
    label: "Type",
    helpText: ``,
  },
  MidiIdLSB: {
    key: "midiIdLSB",
    type: DefinitionType.ComponentValue,
    section: 3,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "MIDI ID LSB",
    helpText: "MIDI LSB channel for current component",
  },
  MidiIdMSB: {
    key: "midiIdMSB",
    type: DefinitionType.ComponentValue,
    section: 4,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "MIDI ID MSB",
    helpText: "MIDI MSB channel for current component",
  },
  LowerCCLimitLSB: {
    key: "lowerCCLimitLSB",
    type: DefinitionType.ComponentValue,
    section: 5,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "Lower CC limit / LSB",
    helpText: "",
  },
  LowerCCLimitMSB: {
    key: "lowerCCLimitMSB",
    type: DefinitionType.ComponentValue,
    section: 6,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "Lower CC limit / MSB",
    helpText: "",
  },
  UpperCCLimitLSB: {
    key: "upperCCLimitLSB",
    type: DefinitionType.ComponentValue,
    section: 7,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "Upper CC limit / LSB",
    helpText: "",
  },
  UpperCCLimitMSB: {
    key: "upperCCLimitMSB",
    type: DefinitionType.ComponentValue,
    section: 8,
    component: FormInputComponent.Input,
    min: 0,
    max: 127,
    label: "Higher CC limit / MSB",
    helpText: "",
  },
  MidiChannel: {
    key: "midiChannel",
    type: DefinitionType.ComponentValue,
    section: 9,
    component: FormInputComponent.Input,
    min: 0,
    max: 16,
    label: "MIDI channel",
    helpText: "Denotes the MIDI CC number for each analog component.",
  },
};
